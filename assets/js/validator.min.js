function Validator(options){let selectorRules={};const getParent=(element,selector)=>{for(;element.parentElement;){if(element.parentElement.matches(selector))return element.parentElement;element=element.parentElement}},validate=(inputElement,rule)=>{let formGroup=getParent(inputElement,options.formGroupSelector),errorElement=formGroup.querySelector(options.errorSelector),rules=selectorRules[rule.selector];for(let i=0;i<rules.length;++i){switch(inputElement.type){case"radio":case"checkbox":errorMessage=rules[i](formElement.querySelector(rule.selector+":checked"));break;default:errorMessage=rules[i](inputElement.value)}if(errorMessage)break}return errorMessage?(errorElement.innerText=errorMessage,formGroup.classList.add("invalid")):(errorElement.innerText="",formGroup.classList.remove("invalid")),!errorMessage};let formElement=document.querySelector(options.form);formElement&&(formElement.onsubmit=function(e){e.preventDefault();let isFormValid=!0;if(options.rules.forEach(rule=>{let inputElement=formElement.querySelector(rule.selector),isValid;validate(inputElement,rule)||(isFormValid=!1)}),isFormValid)if("function"==typeof options.onSubmit){let enableInputs=formElement.querySelectorAll("[name]:not([disable])"),formValues=Array.from(enableInputs).reduce((function(values,input){switch(input.type){case"radio":values[input.name]=formElement.querySelector('input[name="'+input.name+'"]:checked').value;break;case"checkbox":if(input.matches(":checked"))return values[input.name]=[],values;Array.isArray(values[input.name])||(values[input.name]=[]),values[input.name].push(input.value);break;case"file":values[input.name]=input.files;break;default:values[input.name]=input.value}return values}),{});options.onSubmit(formValues)}else formElement.submit()},options.rules.forEach(rule=>{Array.isArray(selectorRules[rule.selector])?selectorRules[rule.selector].push(rule.test):selectorRules[rule.selector]=[rule.test];let inputElements=formElement.querySelectorAll(rule.selector);Array.from(inputElements).forEach(inputElement=>{inputElement.onblur=()=>{validate(inputElement,rule)},inputElement.oninput=()=>{let formGroup=getParent(inputElement,options.formGroupSelector),errorElement;formGroup.querySelector(options.errorSelector).innerText="",formGroup.classList.remove(".invalid")}})}))}Validator.isRequired=(selector,message)=>({selector:selector,test:function(value){return value?void 0:message||"Vui lòng nhập trường này!"}}),Validator.isEmail=(selector,message)=>({selector:selector,test:function(value){let regex;return/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(value)?void 0:message||"Địa chỉ Email chưa chính xác"}}),Validator.isMobile=(selector,message)=>({selector:selector,test:function(value){let regex;return/(84|0[3|5|7|8|9])+([0-9]{8})\b/g.test(value)?void 0:message||"Số điện thoại chưa chính xác"}}),Validator.minLength=(selector,min,message)=>({selector:selector,test:function(value){return value.length>=min?void 0:message||`Vui lòng nhập tối thiểu ${min} ký tự`}}),Validator.isConfirmed=(selector,getConfirmValue,message)=>({selector:selector,test:function(value){return value==getConfirmValue()?void 0:message||"Giá trị nhập vào không chính xác"}}),Validator.addInput=(selector,getInput)=>({selector:selector,test:function(){document.querySelector(selector).value=getInput()}});